// <auto-generated />
using System;
using Epam.ItMarathon.ApiService.Infrastructure.Database;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace Epam.ItMarathon.ApiService.Infrastructure.Database.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Epam.ItMarathon.ApiService.Infrastructure.Database.Models.Gift.GiftEf", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("InfoLink")
                        .HasColumnType("text");

                    b.Property<DateTime>("ModifiedOn")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("character varying(40)");

                    b.Property<long>("UserId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Gifts");
                });

            modelBuilder.Entity("Epam.ItMarathon.ApiService.Infrastructure.Database.Models.Room.RoomEf", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<long?>("AdminId")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("ClosedOn")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("character varying(200)");

                    b.Property<DateTime>("GiftExchangeDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<decimal>("GiftMaximumBudget")
                        .HasColumnType("numeric(20,0)");

                    b.Property<string>("InvitationCode")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("InvitationNote")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("character varying(1000)");

                    b.Property<long>("MaxUsersLimit")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasDefaultValue(20L);

                    b.Property<long>("MaxWishesLimit")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasDefaultValue(5L);

                    b.Property<long>("MinUsersLimit")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasDefaultValue(3L);

                    b.Property<DateTime>("ModifiedOn")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("character varying(40)");

                    b.HasKey("Id");

                    b.HasIndex("AdminId")
                        .IsUnique();

                    b.HasIndex("InvitationCode")
                        .IsUnique();

                    b.ToTable("Rooms");
                });

            modelBuilder.Entity("Epam.ItMarathon.ApiService.Infrastructure.Database.Models.User.UserEf", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<string>("AuthCode")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("DeliveryInfo")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("character varying(500)");

                    b.Property<string>("Email")
                        .HasColumnType("text");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("character varying(40)");

                    b.Property<long?>("GiftId")
                        .HasColumnType("bigint");

                    b.Property<long?>("GiftToUserId")
                        .HasColumnType("bigint");

                    b.Property<string>("Interests")
                        .HasMaxLength(1000)
                        .HasColumnType("character varying(1000)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("character varying(40)");

                    b.Property<DateTime>("ModifiedOn")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<long>("RoomId")
                        .HasColumnType("bigint");

                    b.Property<bool>("WantSurprise")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("boolean")
                        .HasDefaultValue(true);

                    b.HasKey("Id");

                    b.HasIndex("AuthCode")
                        .IsUnique();

                    b.HasIndex("GiftId")
                        .IsUnique();

                    b.HasIndex("GiftToUserId")
                        .IsUnique();

                    b.HasIndex("RoomId");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("Epam.ItMarathon.ApiService.Infrastructure.Database.Models.Gift.GiftEf", b =>
                {
                    b.HasOne("Epam.ItMarathon.ApiService.Infrastructure.Database.Models.User.UserEf", "User")
                        .WithMany("Wishes")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("Epam.ItMarathon.ApiService.Infrastructure.Database.Models.Room.RoomEf", b =>
                {
                    b.HasOne("Epam.ItMarathon.ApiService.Infrastructure.Database.Models.User.UserEf", "Admin")
                        .WithOne("IsAdminForRoom")
                        .HasForeignKey("Epam.ItMarathon.ApiService.Infrastructure.Database.Models.Room.RoomEf", "AdminId");

                    b.Navigation("Admin");
                });

            modelBuilder.Entity("Epam.ItMarathon.ApiService.Infrastructure.Database.Models.User.UserEf", b =>
                {
                    b.HasOne("Epam.ItMarathon.ApiService.Infrastructure.Database.Models.Gift.GiftEf", "TargetGift")
                        .WithOne("UserChose")
                        .HasForeignKey("Epam.ItMarathon.ApiService.Infrastructure.Database.Models.User.UserEf", "GiftId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Epam.ItMarathon.ApiService.Infrastructure.Database.Models.User.UserEf", "TargetUser")
                        .WithOne("GotGiftFromUser")
                        .HasForeignKey("Epam.ItMarathon.ApiService.Infrastructure.Database.Models.User.UserEf", "GiftToUserId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Epam.ItMarathon.ApiService.Infrastructure.Database.Models.Room.RoomEf", "Room")
                        .WithMany("Users")
                        .HasForeignKey("RoomId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Room");

                    b.Navigation("TargetGift");

                    b.Navigation("TargetUser");
                });

            modelBuilder.Entity("Epam.ItMarathon.ApiService.Infrastructure.Database.Models.Gift.GiftEf", b =>
                {
                    b.Navigation("UserChose");
                });

            modelBuilder.Entity("Epam.ItMarathon.ApiService.Infrastructure.Database.Models.Room.RoomEf", b =>
                {
                    b.Navigation("Users");
                });

            modelBuilder.Entity("Epam.ItMarathon.ApiService.Infrastructure.Database.Models.User.UserEf", b =>
                {
                    b.Navigation("GotGiftFromUser");

                    b.Navigation("IsAdminForRoom");

                    b.Navigation("Wishes");
                });
#pragma warning restore 612, 618
        }
    }
}
